/*
 *  Copyright 2025 Ewogijk
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 * This file is auto generated.
 */

#ifndef RUNEOS_ISR_STUBS_H
#define RUNEOS_ISR_STUBS_H

#include "IDT.h"

CLINK void ISR0();
CLINK void ISR1();
CLINK void ISR2();
CLINK void ISR3();
CLINK void ISR4();
CLINK void ISR5();
CLINK void ISR6();
CLINK void ISR7();
CLINK void ISR8();
CLINK void ISR9();
CLINK void ISR10();
CLINK void ISR11();
CLINK void ISR12();
CLINK void ISR13();
CLINK void ISR14();
CLINK void ISR15();
CLINK void ISR16();
CLINK void ISR17();
CLINK void ISR18();
CLINK void ISR19();
CLINK void ISR20();
CLINK void ISR21();
CLINK void ISR22();
CLINK void ISR23();
CLINK void ISR24();
CLINK void ISR25();
CLINK void ISR26();
CLINK void ISR27();
CLINK void ISR28();
CLINK void ISR29();
CLINK void ISR30();
CLINK void ISR31();
CLINK void ISR32();
CLINK void ISR33();
CLINK void ISR34();
CLINK void ISR35();
CLINK void ISR36();
CLINK void ISR37();
CLINK void ISR38();
CLINK void ISR39();
CLINK void ISR40();
CLINK void ISR41();
CLINK void ISR42();
CLINK void ISR43();
CLINK void ISR44();
CLINK void ISR45();
CLINK void ISR46();
CLINK void ISR47();
CLINK void ISR48();
CLINK void ISR49();
CLINK void ISR50();
CLINK void ISR51();
CLINK void ISR52();
CLINK void ISR53();
CLINK void ISR54();
CLINK void ISR55();
CLINK void ISR56();
CLINK void ISR57();
CLINK void ISR58();
CLINK void ISR59();
CLINK void ISR60();
CLINK void ISR61();
CLINK void ISR62();
CLINK void ISR63();
CLINK void ISR64();
CLINK void ISR65();
CLINK void ISR66();
CLINK void ISR67();
CLINK void ISR68();
CLINK void ISR69();
CLINK void ISR70();
CLINK void ISR71();
CLINK void ISR72();
CLINK void ISR73();
CLINK void ISR74();
CLINK void ISR75();
CLINK void ISR76();
CLINK void ISR77();
CLINK void ISR78();
CLINK void ISR79();
CLINK void ISR80();
CLINK void ISR81();
CLINK void ISR82();
CLINK void ISR83();
CLINK void ISR84();
CLINK void ISR85();
CLINK void ISR86();
CLINK void ISR87();
CLINK void ISR88();
CLINK void ISR89();
CLINK void ISR90();
CLINK void ISR91();
CLINK void ISR92();
CLINK void ISR93();
CLINK void ISR94();
CLINK void ISR95();
CLINK void ISR96();
CLINK void ISR97();
CLINK void ISR98();
CLINK void ISR99();
CLINK void ISR100();
CLINK void ISR101();
CLINK void ISR102();
CLINK void ISR103();
CLINK void ISR104();
CLINK void ISR105();
CLINK void ISR106();
CLINK void ISR107();
CLINK void ISR108();
CLINK void ISR109();
CLINK void ISR110();
CLINK void ISR111();
CLINK void ISR112();
CLINK void ISR113();
CLINK void ISR114();
CLINK void ISR115();
CLINK void ISR116();
CLINK void ISR117();
CLINK void ISR118();
CLINK void ISR119();
CLINK void ISR120();
CLINK void ISR121();
CLINK void ISR122();
CLINK void ISR123();
CLINK void ISR124();
CLINK void ISR125();
CLINK void ISR126();
CLINK void ISR127();
CLINK void ISR128();
CLINK void ISR129();
CLINK void ISR130();
CLINK void ISR131();
CLINK void ISR132();
CLINK void ISR133();
CLINK void ISR134();
CLINK void ISR135();
CLINK void ISR136();
CLINK void ISR137();
CLINK void ISR138();
CLINK void ISR139();
CLINK void ISR140();
CLINK void ISR141();
CLINK void ISR142();
CLINK void ISR143();
CLINK void ISR144();
CLINK void ISR145();
CLINK void ISR146();
CLINK void ISR147();
CLINK void ISR148();
CLINK void ISR149();
CLINK void ISR150();
CLINK void ISR151();
CLINK void ISR152();
CLINK void ISR153();
CLINK void ISR154();
CLINK void ISR155();
CLINK void ISR156();
CLINK void ISR157();
CLINK void ISR158();
CLINK void ISR159();
CLINK void ISR160();
CLINK void ISR161();
CLINK void ISR162();
CLINK void ISR163();
CLINK void ISR164();
CLINK void ISR165();
CLINK void ISR166();
CLINK void ISR167();
CLINK void ISR168();
CLINK void ISR169();
CLINK void ISR170();
CLINK void ISR171();
CLINK void ISR172();
CLINK void ISR173();
CLINK void ISR174();
CLINK void ISR175();
CLINK void ISR176();
CLINK void ISR177();
CLINK void ISR178();
CLINK void ISR179();
CLINK void ISR180();
CLINK void ISR181();
CLINK void ISR182();
CLINK void ISR183();
CLINK void ISR184();
CLINK void ISR185();
CLINK void ISR186();
CLINK void ISR187();
CLINK void ISR188();
CLINK void ISR189();
CLINK void ISR190();
CLINK void ISR191();
CLINK void ISR192();
CLINK void ISR193();
CLINK void ISR194();
CLINK void ISR195();
CLINK void ISR196();
CLINK void ISR197();
CLINK void ISR198();
CLINK void ISR199();
CLINK void ISR200();
CLINK void ISR201();
CLINK void ISR202();
CLINK void ISR203();
CLINK void ISR204();
CLINK void ISR205();
CLINK void ISR206();
CLINK void ISR207();
CLINK void ISR208();
CLINK void ISR209();
CLINK void ISR210();
CLINK void ISR211();
CLINK void ISR212();
CLINK void ISR213();
CLINK void ISR214();
CLINK void ISR215();
CLINK void ISR216();
CLINK void ISR217();
CLINK void ISR218();
CLINK void ISR219();
CLINK void ISR220();
CLINK void ISR221();
CLINK void ISR222();
CLINK void ISR223();
CLINK void ISR224();
CLINK void ISR225();
CLINK void ISR226();
CLINK void ISR227();
CLINK void ISR228();
CLINK void ISR229();
CLINK void ISR230();
CLINK void ISR231();
CLINK void ISR232();
CLINK void ISR233();
CLINK void ISR234();
CLINK void ISR235();
CLINK void ISR236();
CLINK void ISR237();
CLINK void ISR238();
CLINK void ISR239();
CLINK void ISR240();
CLINK void ISR241();
CLINK void ISR242();
CLINK void ISR243();
CLINK void ISR244();
CLINK void ISR245();
CLINK void ISR246();
CLINK void ISR247();
CLINK void ISR248();
CLINK void ISR249();
CLINK void ISR250();
CLINK void ISR251();
CLINK void ISR252();
CLINK void ISR253();
CLINK void ISR254();
CLINK void ISR255();
namespace Rune::CPU {
    void init_interrupt_service_routines() {
        U8 gdt_offset = 0x08;
        idt_set(0, (void*) ISR0, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(1, (void*) ISR1, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(2, (void*) ISR2, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(3, (void*) ISR3, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(4, (void*) ISR4, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(5, (void*) ISR5, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(6, (void*) ISR6, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(7, (void*) ISR7, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(8, (void*) ISR8, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(9, (void*) ISR9, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(10, (void*) ISR10, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(11, (void*) ISR11, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(12, (void*) ISR12, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(13, (void*) ISR13, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(14, (void*) ISR14, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(15, (void*) ISR15, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(16, (void*) ISR16, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(17, (void*) ISR17, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(18, (void*) ISR18, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(19, (void*) ISR19, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(20, (void*) ISR20, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(21, (void*) ISR21, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(22, (void*) ISR22, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(23, (void*) ISR23, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(24, (void*) ISR24, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(25, (void*) ISR25, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(26, (void*) ISR26, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(27, (void*) ISR27, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(28, (void*) ISR28, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(29, (void*) ISR29, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(30, (void*) ISR30, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(31, (void*) ISR31, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(32, (void*) ISR32, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(33, (void*) ISR33, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(34, (void*) ISR34, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(35, (void*) ISR35, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(36, (void*) ISR36, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(37, (void*) ISR37, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(38, (void*) ISR38, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(39, (void*) ISR39, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(40, (void*) ISR40, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(41, (void*) ISR41, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(42, (void*) ISR42, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(43, (void*) ISR43, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(44, (void*) ISR44, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(45, (void*) ISR45, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(46, (void*) ISR46, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(47, (void*) ISR47, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(48, (void*) ISR48, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(49, (void*) ISR49, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(50, (void*) ISR50, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(51, (void*) ISR51, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(52, (void*) ISR52, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(53, (void*) ISR53, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(54, (void*) ISR54, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(55, (void*) ISR55, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(56, (void*) ISR56, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(57, (void*) ISR57, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(58, (void*) ISR58, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(59, (void*) ISR59, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(60, (void*) ISR60, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(61, (void*) ISR61, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(62, (void*) ISR62, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(63, (void*) ISR63, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(64, (void*) ISR64, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(65, (void*) ISR65, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(66, (void*) ISR66, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(67, (void*) ISR67, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(68, (void*) ISR68, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(69, (void*) ISR69, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(70, (void*) ISR70, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(71, (void*) ISR71, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(72, (void*) ISR72, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(73, (void*) ISR73, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(74, (void*) ISR74, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(75, (void*) ISR75, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(76, (void*) ISR76, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(77, (void*) ISR77, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(78, (void*) ISR78, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(79, (void*) ISR79, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(80, (void*) ISR80, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(81, (void*) ISR81, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(82, (void*) ISR82, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(83, (void*) ISR83, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(84, (void*) ISR84, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(85, (void*) ISR85, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(86, (void*) ISR86, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(87, (void*) ISR87, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(88, (void*) ISR88, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(89, (void*) ISR89, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(90, (void*) ISR90, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(91, (void*) ISR91, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(92, (void*) ISR92, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(93, (void*) ISR93, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(94, (void*) ISR94, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(95, (void*) ISR95, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(96, (void*) ISR96, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(97, (void*) ISR97, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(98, (void*) ISR98, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(99, (void*) ISR99, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(100, (void*) ISR100, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(101, (void*) ISR101, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(102, (void*) ISR102, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(103, (void*) ISR103, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(104, (void*) ISR104, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(105, (void*) ISR105, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(106, (void*) ISR106, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(107, (void*) ISR107, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(108, (void*) ISR108, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(109, (void*) ISR109, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(110, (void*) ISR110, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(111, (void*) ISR111, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(112, (void*) ISR112, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(113, (void*) ISR113, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(114, (void*) ISR114, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(115, (void*) ISR115, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(116, (void*) ISR116, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(117, (void*) ISR117, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(118, (void*) ISR118, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(119, (void*) ISR119, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(120, (void*) ISR120, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(121, (void*) ISR121, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(122, (void*) ISR122, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(123, (void*) ISR123, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(124, (void*) ISR124, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(125, (void*) ISR125, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(126, (void*) ISR126, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(127, (void*) ISR127, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(128, (void*) ISR128, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(129, (void*) ISR129, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(130, (void*) ISR130, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(131, (void*) ISR131, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(132, (void*) ISR132, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(133, (void*) ISR133, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(134, (void*) ISR134, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(135, (void*) ISR135, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(136, (void*) ISR136, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(137, (void*) ISR137, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(138, (void*) ISR138, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(139, (void*) ISR139, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(140, (void*) ISR140, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(141, (void*) ISR141, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(142, (void*) ISR142, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(143, (void*) ISR143, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(144, (void*) ISR144, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(145, (void*) ISR145, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(146, (void*) ISR146, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(147, (void*) ISR147, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(148, (void*) ISR148, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(149, (void*) ISR149, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(150, (void*) ISR150, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(151, (void*) ISR151, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(152, (void*) ISR152, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(153, (void*) ISR153, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(154, (void*) ISR154, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(155, (void*) ISR155, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(156, (void*) ISR156, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(157, (void*) ISR157, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(158, (void*) ISR158, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(159, (void*) ISR159, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(160, (void*) ISR160, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(161, (void*) ISR161, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(162, (void*) ISR162, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(163, (void*) ISR163, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(164, (void*) ISR164, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(165, (void*) ISR165, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(166, (void*) ISR166, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(167, (void*) ISR167, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(168, (void*) ISR168, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(169, (void*) ISR169, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(170, (void*) ISR170, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(171, (void*) ISR171, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(172, (void*) ISR172, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(173, (void*) ISR173, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(174, (void*) ISR174, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(175, (void*) ISR175, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(176, (void*) ISR176, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(177, (void*) ISR177, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(178, (void*) ISR178, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(179, (void*) ISR179, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(180, (void*) ISR180, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(181, (void*) ISR181, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(182, (void*) ISR182, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(183, (void*) ISR183, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(184, (void*) ISR184, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(185, (void*) ISR185, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(186, (void*) ISR186, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(187, (void*) ISR187, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(188, (void*) ISR188, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(189, (void*) ISR189, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(190, (void*) ISR190, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(191, (void*) ISR191, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(192, (void*) ISR192, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(193, (void*) ISR193, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(194, (void*) ISR194, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(195, (void*) ISR195, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(196, (void*) ISR196, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(197, (void*) ISR197, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(198, (void*) ISR198, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(199, (void*) ISR199, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(200, (void*) ISR200, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(201, (void*) ISR201, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(202, (void*) ISR202, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(203, (void*) ISR203, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(204, (void*) ISR204, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(205, (void*) ISR205, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(206, (void*) ISR206, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(207, (void*) ISR207, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(208, (void*) ISR208, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(209, (void*) ISR209, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(210, (void*) ISR210, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(211, (void*) ISR211, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(212, (void*) ISR212, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(213, (void*) ISR213, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(214, (void*) ISR214, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(215, (void*) ISR215, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(216, (void*) ISR216, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(217, (void*) ISR217, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(218, (void*) ISR218, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(219, (void*) ISR219, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(220, (void*) ISR220, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(221, (void*) ISR221, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(222, (void*) ISR222, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(223, (void*) ISR223, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(224, (void*) ISR224, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(225, (void*) ISR225, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(226, (void*) ISR226, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(227, (void*) ISR227, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(228, (void*) ISR228, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(229, (void*) ISR229, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(230, (void*) ISR230, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(231, (void*) ISR231, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(232, (void*) ISR232, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(233, (void*) ISR233, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(234, (void*) ISR234, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(235, (void*) ISR235, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(236, (void*) ISR236, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(237, (void*) ISR237, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(238, (void*) ISR238, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(239, (void*) ISR239, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(240, (void*) ISR240, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(241, (void*) ISR241, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(242, (void*) ISR242, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(243, (void*) ISR243, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(244, (void*) ISR244, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(245, (void*) ISR245, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(246, (void*) ISR246, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(247, (void*) ISR247, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(248, (void*) ISR248, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(249, (void*) ISR249, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(250, (void*) ISR250, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(251, (void*) ISR251, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(252, (void*) ISR252, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(253, (void*) ISR253, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(254, (void*) ISR254, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
        idt_set(255, (void*) ISR255, gdt_offset, 0, GateType::INTERRUPT_GATE, 0, false);
    }
} // namespace Rune::CPU

#endif // RUNEOS_ISR_STUBS_H